################################################################################
#
# F5 Heat Template to Orchestrate a 2 NIC TMOS Active/Standby ADC
#
#    Management Network
# ------------------------------------------- License Activation with BIG-IQ
#           |                   |                  
#           |                   |  
#        -------             -------               
#        | VE  |             | VE  |               TMM 1.1 - Data Network
#        |     |             |     |               
#        -------             -------
# 1.1       |                   |
# -------------------------------------------  
#    Data Network                              
#
################################################################################
heat_template_version: 2015-10-15

description: F5 Heat Template to Orchestrate a 2 NIC TMOS Active/Standby ADC

parameters:
  tmos_image:
    type: string
    label: TMOS VE Disk Image
    description: The image to be used on the TMOS VE instance.
    constraints:
      - custom_constraint: glance.image
  tmos_flavor:
    type: string
    label: TMOS VE Flavor
    description: Type of instance (flavor) to be used for the TMOS VE instance.
    default: m1.bigip.ALL.1SLOT
    constraints:
      - custom_constraint: nova.flavor
  tmos_root_authkey_name:
    type: string
    label: TMOS Root SSH Authkey name
    description: The name of the OpenStack Authkey to ue for the root user
    default: admin
  tmos_root_password:
    type: string
    label: TMOS Root Password
    description: Password to set for the built-in root user
    default: f5c0nfig
    hidden: true
  tmos_admin_password:
    type: string
    label: TMOS Administrator Password
    description: Password to set for the built-in admin user
    default: f5c0nfig
    hidden: true
  license_host:
    type: string
    label: BIG-IQ Licensor Host
    description: BIG-IQ IP or hostname to license TMOS VE instance
    default: None
  license_username:
    type: string
    label: BIG-IQ User
    description: BIG-IQ user name
    default: admin
  license_password:
    type: string
    hidden: true
    label: BIG-IQ Password
    description: BIG-IQ password
    default: admin
  license_pool:
    type: string
    label: BIG-IQ License Pool
    description: BIG-IQ license pool for this TMOS VE instance
    default: None
  do_url:
    type: string
    label: DO URL
    description: f5-declarative-onboarding package URL
  as3_url:
    type: string
    label: AS3 URL
    description: f5-appsvcs-extension package URL
  phone_home_url:
    type: string
    label: Phone Home URL
    description: URL for the phone home when onboarding finishes
    default: https://webhook.site/
  external_network:
    type: string
    label: External Access Network
    description: The network to assign Floating IPs for management access
    default: None
    constraints:
      - custom_constraint: neutron.network
  management_network:
    type: string
    label: Management Network
    description: OAM Network
    default: None
    constraints:
      - custom_constraint: neutron.network
  management_network_security_group:
    type: string
    label: Management Network Security Group
    description: OAM Network Security Group
    default: default
  vip_network:
    type: string
    label: Virtual Servers Network
    description: Virtual Servers Network for Client Traffic
    default: None
    constraints:
      - custom_constraint: neutron.network
  vip_network_security_group:
    type: string
    label: Virtual Servers Network Security Group
    description: Virtual Servers Network for Client Traffic Security Group
    default: default
  vip_subnet:
    type: string
    label: Virtual Servers Subnet
    description: Virtual Servers Subnet for Client Virtual Servers
    constraints:
      - custom_constraint: neutron.subnet
  heat_timeout:
    type: number
    label: Heat Stack Timeout
    description: The Heat stack timeout in seconds
    default: 1800

parameter_groups:
- parameters:
  - tmos_image
  - tmos_flavor
- parameters:
  - tmos_root_authkey_name
  - tmos_root_password
  - tmos_admin_password
- parameters:
  - license_host
  - license_username
  - license_password
  - license_pool
- parameters:
  - do_url
  - as3_url
- parameters:
  - phone_home_url
- parameters:
  - external_network
  - management_network
  - management_network_security_group
  - vip_network
  - vip_network_security_group
  - vip_subnet
- parameters:
  - heat_timeout

resources:
  primary_tmos_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: management_network }
      security_groups:
        - { get_param: management_network_security_group }
      allowed_address_pairs:
        - ip_address: 0.0.0.0/0
        - ip_address: ::/0
  primary_tmos_mgmt_floating_ip:
    type: OS::Neutron::FloatingIP
    depends_on: primary_tmos_mgmt_port
    properties:
      floating_network: { get_param: external_network }
      port_id: { get_resource: primary_tmos_mgmt_port }
  primary_tmos_vip_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: vip_network }
      security_groups:
        - { get_param: vip_network_security_group }
      allowed_address_pairs:
        - ip_address: 0.0.0.0/0
        - ip_address: ::/0
      fixed_ips:
        - subnet: { get_param: vip_subnet }
  secondary_tmos_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: management_network }
      security_groups:
        - { get_param: management_network_security_group }
      allowed_address_pairs:
        - ip_address: 0.0.0.0/0
        - ip_address: ::/0
  secondary_tmos_mgmt_floating_ip:
    type: OS::Neutron::FloatingIP
    depends_on: secondary_tmos_mgmt_port
    properties:
      floating_network: { get_param: external_network }
      port_id: { get_resource: secondary_tmos_mgmt_port }
  secondary_tmos_vip_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: vip_network }
      security_groups:
        - { get_param: vip_network_security_group }
      allowed_address_pairs:
        - ip_address: 0.0.0.0/0
        - ip_address: ::/0
      fixed_ips:
        - subnet: { get_param: vip_subnet }
        - subnet: { get_param: vip_subnet }
  wait_handle:
    type: OS::Heat::WaitConditionHandle
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 2
      timeout: { get_param: heat_timeout }
  primary_adc_instance:
    type: OS::Nova::Server
    depends_on: [primary_tmos_mgmt_port, primary_tmos_vip_port]
    properties:
      image: { get_param: tmos_image }
      flavor: { get_param: tmos_flavor }
      config_drive: true
      key_name: { get_param: tmos_root_authkey_name }
      networks:
        - port: { get_resource: primary_tmos_mgmt_port }
        - port: { get_resource: primary_tmos_vip_port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            $root_password: { get_param: tmos_root_password }
            $admin_password: { get_param: tmos_admin_password }
            $license_host: { get_param: license_host }
            $license_username: { get_param: license_username }
            $license_password: { get_param: license_password }
            $license_pool: { get_param: license_pool }
            $do_url: { get_param: do_url }
            $as3_url: { get_param: as3_url }
            $phone_home_url: { get_param: phone_home_url }
            $secondary_cluster_ip: { get_attr: [ secondary_tmos_vip_port, fixed_ips, 1, ip_address ] }
            $wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: { get_file: 'user_data_primary.yaml' }
  secondary_adc_instance:
    type: OS::Nova::Server
    depends_on: [secondary_tmos_mgmt_port, secondary_tmos_vip_port]
    properties:
      image: { get_param: tmos_image }
      flavor: { get_param: tmos_flavor }
      config_drive: true
      key_name: { get_param: tmos_root_authkey_name }
      networks:
        - port: { get_resource: secondary_tmos_mgmt_port }
        - port: { get_resource: secondary_tmos_vip_port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            $root_password: { get_param: tmos_root_password }
            $admin_password: { get_param: tmos_admin_password }
            $license_host: { get_param: license_host }
            $license_username: { get_param: license_username }
            $license_password: { get_param: license_password }
            $license_pool: { get_param: license_pool }
            $do_url: { get_param: do_url }
            $as3_url: { get_param: as3_url }
            $phone_home_url: { get_param: phone_home_url }
            $secondary_cluster_ip: { get_attr: [ secondary_tmos_vip_port, fixed_ips, 1, ip_address ] }
            $wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: { get_file: 'user_data_secondary.yaml' }
outputs:
  primary_tmos_management_xui_private:
    description: Primary TMOS management service IP address
    value: { list_join: ['', ['https://', { get_attr: [ primary_tmos_mgmt_port, fixed_ips, 0, ip_address ] } ]] }
  primary_tmos_management_cli_private:
    description: Primary TMOS management service IP address
    value: { list_join: ['', ['ssh://root@', { get_attr: [ primary_tmos_mgmt_port, fixed_ips, 0, ip_address ] } ]] }
  primary_tmos_management_xui_public:
    description: Primary Floating IP access the TMOS management services
    value: { list_join: ['', ['https://', { get_attr: [ primary_tmos_mgmt_floating_ip, floating_ip_address ] } ]] }
  primary_tmos_management_cli_public:
    description: Primary TMOS management service IP address
    value: { list_join: ['', ['ssh://root@', { get_attr: [ primary_tmos_mgmt_floating_ip, floating_ip_address ] } ]] }
  primary_f5_declarative_onboarding_private:
    description: Primary Device Level Declarative REST API
    value: { list_join: ['', ['https://', { get_attr: [ primary_tmos_mgmt_port, fixed_ips, 0, ip_address ] }, '/mgmt/shared/declarative-onboarding' ]] }
  primary_f5_appsvcs_extension_private:
    description: Primary Service Level Declarative REST API
    value: { list_join: ['', ['https://', { get_attr: [ primary_tmos_mgmt_port, fixed_ips, 0, ip_address ] }, '/mgmt/shared/appsvcs/declare' ]] }
  primary_f5_declarative_onboarding_public:
    description: Primary Device Level Declarative REST API
    value: { list_join: ['', ['https://', { get_attr: [ primary_tmos_mgmt_floating_ip, floating_ip_address ] }, '/mgmt/shared/declarative-onboarding' ]] }
  primary_f5_appsvcs_extension_public:
    description: Primary Service Level Declarative REST API
    value: { list_join: ['', ['https://', { get_attr: [ primary_tmos_mgmt_floating_ip, floating_ip_address ] }, '/mgmt/shared/appsvcs/declare' ]] }  
  secondary_tmos_management_xui_private:
    description: Secondary TMOS management service IP address
    value: { list_join: ['', ['https://', { get_attr: [ secondary_tmos_mgmt_port, fixed_ips, 0, ip_address ] } ]] }
  secondary_tmos_management_cli_private:
    description: Secondary TMOS management service IP address
    value: { list_join: ['', ['ssh://root@', { get_attr: [ secondary_tmos_mgmt_port, fixed_ips, 0, ip_address ] } ]] }
  secondary_tmos_management_xui_public:
    description: Secondary Floating IP access the TMOS management services
    value: { list_join: ['', ['https://', { get_attr: [ secondary_tmos_mgmt_floating_ip, floating_ip_address ] } ]] }
  secondary_tmos_management_cli_public:
    description: Secondary TMOS management service IP address
    value: { list_join: ['', ['ssh://root@', { get_attr: [ secondary_tmos_mgmt_floating_ip, floating_ip_address ] } ]] }
  secondary_f5_declarative_onboarding_private:
    description: Secondary Device Level Declarative REST API
    value: { list_join: ['', ['https://', { get_attr: [ secondary_tmos_mgmt_port, fixed_ips, 0, ip_address ] }, '/mgmt/shared/declarative-onboarding' ]] }
  secondary_f5_appsvcs_extension_private:
    description: Secondary Service Level Declarative REST API
    value: { list_join: ['', ['https://', { get_attr: [ secondary_tmos_mgmt_port, fixed_ips, 0, ip_address ] }, '/mgmt/shared/appsvcs/declare' ]] }
  secondary_f5_declarative_onboarding_public:
    description: Secondary Device Level Declarative REST API
    value: { list_join: ['', ['https://', { get_attr: [ secondary_tmos_mgmt_floating_ip, floating_ip_address ] }, '/mgmt/shared/declarative-onboarding' ]] }
  secondary_f5_appsvcs_extension_public:
    description: Secondary Service Level Declarative REST API
    value: { list_join: ['', ['https://', { get_attr: [ secondary_tmos_mgmt_floating_ip, floating_ip_address ] }, '/mgmt/shared/appsvcs/declare' ]] }
  tmos_phone_home_url:
    description: Phone Home URL
    value: { get_param: phone_home_url }
  heat_phone_home_cli:
    description: Heat Wait Condition CLI
    value: { get_attr: ['wait_handle', 'curl_cli'] }
