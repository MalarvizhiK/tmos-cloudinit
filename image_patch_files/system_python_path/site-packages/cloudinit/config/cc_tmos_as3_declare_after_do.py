#!/usr/bin/env python

# coding=utf-8
# pylint: disable=unused-argument
# Copyright (c) 2016-2018, F5 Networks, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
"""
This module contains the business logic needed to handle the
f5-appsvs-3 declaration after f5-declarative-onboarding completes.
"""

import datetime
import logging
import time

import tmos_onboard_utils

LOG = logging.getLogger(__name__)


PROGRESS_FILE = '/config/cloud/as3_post_do_progress.log'


def log_progress(message):
    """Generate a progress log entry"""
    with open(PROGRESS_FILE, 'a+') as progress_file:
        progress_file.write(
            '[' + datetime.datetime.now().strftime(
                "%Y-%m-%d %H:%M:%S.%m") + '] - ' + message + '\n')


def wait_for_do_to_complete():
    """Blocks until the f5-declarative-onboarding is complete"""
    tmos_onboard_utils.wait_for_icontrollx()
    waiting_on_do_complete = 480
    while waiting_on_do_complete > 0:
        waiting_on_do_complete -= 1
        response = tmos_onboard_utils.get_do_declaration()
        if response:
            if response.status_code > 399:
                return False
            else:
                if response.status_code == 200:
                    return True
            time.sleep(2)
        else:
            return False


def handle(name, cloud_config, cloud, log, args):
    """Cloud-init processing function"""
    if wait_for_do_to_complete():
        response = tmos_onboard_utils.get_as3_declaration()
        if response:
            if response.status_code == 204:
                tmos_onboard_utils.as3_declare()
            else:
                log_progress(
                    'f5-appsrvs-3 has a previous declaration, not deploying onboard declaration')
        else:
            log_progress(
                'f5-appsrvs-3 has failed, not deploying declaration')
    else:
        log_progress(
            'f5-declarative-onboarding has failed, not deploying f5-appsrvs-3 declaration')


if __name__ == "__main__":
    # Running the cloud-init module from the CLI python interpreter
    handle('cc_tmos_as3_declare_after_do', None, None, logging, [])
